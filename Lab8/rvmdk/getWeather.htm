<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\getWeather.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\getWeather.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Mon Oct 31 19:01:04 2016
<BR><P>
<H3>Maximum Stack Usage =        136 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">GPIOB_intHandler</a> from board.o(i.GPIOB_intHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 112 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">UARTStdioIntHandler</a> from uartstdio.o(i.UARTStdioIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[2a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[9]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[2c]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[2d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2e]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[2f]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[b]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
</UL>

<P><STRONG><a name="[a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[30]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>FPUEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fpu.o(i.FPUEnable))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initClk
</UL>

<P><STRONG><a name="[27]"></a>FPULazyStackingEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fpu.o(i.FPULazyStackingEnable))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initClk
</UL>

<P><STRONG><a name="[4]"></a>GPIOB_intHandler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, board.o(i.GPIOB_intHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOB_intHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[e]"></a>GPIOIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_intHandler
</UL>

<P><STRONG><a name="[d]"></a>GPIOIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_intHandler
</UL>

<P><STRONG><a name="[11]"></a>GPIOPadConfigSet</STRONG> (Thumb, 314 bytes, Stack size 28 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[21]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[f]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[12]"></a>MPU6050_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mpu6050.o(i.MPU6050_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MPU6050_Init &rArr; i2c_sendPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendPacket
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>MPU6050_ReadGyro</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_ReadGyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MPU6050_ReadGyro &rArr; i2c_readData
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_readData
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17]"></a>SysCtlClockSet</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initClk
</UL>

<P><STRONG><a name="[20]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[1c]"></a>UARTFlushRx</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, uartstdio.o(i.UARTFlushRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTFlushRx
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>

<P><STRONG><a name="[18]"></a>UARTFlushTx</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, uartstdio.o(i.UARTFlushTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>

<P><STRONG><a name="[1b]"></a>UARTStdioConfig</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, uartstdio.o(i.UARTStdioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UARTStdioConfig &rArr; UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushRx
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5]"></a>UARTStdioIntHandler</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UARTStdioIntHandler &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_Init &rArr; UARTStdioConfig &rArr; UARTFlushTx
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>UARTprintf</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, uartstdio.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>UARTvprintf</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, uartstdio.o(i.UARTvprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[1d]"></a>UARTwrite</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[31]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[33]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[13]"></a>i2c_init</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, i2c.o(i.i2c_init))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[24]"></a>i2c_isBusy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(i.i2c_isBusy))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_sendPacket
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_readData
</UL>

<P><STRONG><a name="[16]"></a>i2c_readData</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, i2c.o(i.i2c_readData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_readData
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_isBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadGyro
</UL>

<P><STRONG><a name="[14]"></a>i2c_sendPacket</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, i2c.o(i.i2c_sendPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_sendPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_isBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[25]"></a>initClk</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, board.o(i.initClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initClk &rArr; SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPULazyStackingEnable
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPUEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; UARTprintf &rArr; UARTvprintf &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_set
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initClk
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadGyro
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[28]"></a>motor_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, motor.o(i.motor_init))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>motor_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, motor.o(i.motor_set))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>IsBufferEmpty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uartstdio.o(i.IsBufferEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[1e]"></a>IsBufferFull</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uartstdio.o(i.IsBufferFull))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[1a]"></a>UARTPrimeTransmit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, uartstdio.o(i.UARTPrimeTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
